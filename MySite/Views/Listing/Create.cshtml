@model MySite.Models.Listing

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage_Master.cshtml";
}
<div class="container">
    <h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Listing</h4>
            <hr/>
            @Html.ValidationSummary(true)


            <div class="form-group">
                @Html.LabelFor(model => model.Address, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address)
                    @Html.ValidationMessageFor(model => model.Address)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City)
                    @Html.ValidationMessageFor(model => model.City)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Country, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country)
                    @Html.ValidationMessageFor(model => model.Country)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Postcode, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postcode)
                    @Html.ValidationMessageFor(model => model.Postcode)
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.DateAvailable, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateAvailable, new { id = "date-available" })
                    @Html.ValidationMessageFor(model => model.DateAvailable)
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Price, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price)
                    @Html.ValidationMessageFor(model => model.Price)
                </div>
            </div>

            <script type="text/javascript">
        window.onload = function () {
            document.getElementById('imageUploadId').onsubmit = function () {
                var formdata = new FormData();
                var fileInput = document.getElementById('fileInputType');
                for (i = 0; i < fileInput.files.length; i++) {
                    var file = pathToFile(fileInput.files[i].name);
                    formdata.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/Listing/UploadImageMethod');
                xhr.send(formdata);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        if (xhr.responseText == "Success") {
                            alert("Upload image successfully.");

                            //parent.$.jQuery.fn.fancybox.close();
                        }
                        else {
                            alert("Error occurred.! Please try again");
                        }
                    }
                }
                return false;
            }
        }
            </script>
        

        <div class="form-group">
                @Html.LabelFor(model => model.Deposit, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Deposit)
                    @Html.ValidationMessageFor(model => model.Deposit)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BuildingType, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BuildingType)
                    @Html.ValidationMessageFor(model => model.BuildingType)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContractLength, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContractLength)
                    @Html.ValidationMessageFor(model => model.ContractLength)
                </div>
            </div>

          

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rooms, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rooms)
                    @Html.ValidationMessageFor(model => model.Rooms)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bedrooms, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bedrooms)
                    @Html.ValidationMessageFor(model => model.Bedrooms)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Size, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Size)
                    @Html.ValidationMessageFor(model => model.Size)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bathrooms, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bathrooms)
                    @Html.ValidationMessageFor(model => model.Bathrooms)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pets, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pets)
                    @Html.ValidationMessageFor(model => model.Pets)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Smoking, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Smoking)
                    @Html.ValidationMessageFor(model => model.Smoking)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DisabledAccess, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisabledAccess)
                    @Html.ValidationMessageFor(model => model.DisabledAccess)
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Furnished, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Furnished)
                    @Html.ValidationMessageFor(model => model.Furnished)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PriceType, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceType)
                    @Html.ValidationMessageFor(model => model.PriceType)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BasementType, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BasementType)
                    @Html.ValidationMessageFor(model => model.BasementType)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Community, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Community)
                    @Html.ValidationMessageFor(model => model.Community)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LaundryType, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LaundryType)
                    @Html.ValidationMessageFor(model => model.LaundryType)
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeatingType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeatingType)
                @Html.ValidationMessageFor(model => model.HeatingType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkingSpaces, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkingSpaces)
                @Html.ValidationMessageFor(model => model.ParkingSpaces)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Utilities, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilities)
                @Html.ValidationMessageFor(model => model.Utilities)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceCharge, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceCharge)
                @Html.ValidationMessageFor(model => model.ServiceCharge)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoolingType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CoolingType)
                @Html.ValidationMessageFor(model => model.CoolingType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParkingType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParkingType)
                @Html.ValidationMessageFor(model => model.ParkingType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FuelType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FuelType)
                @Html.ValidationMessageFor(model => model.FuelType)
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SizeUnits, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SizeUnits)
                    @Html.ValidationMessageFor(model => model.SizeUnits)
                </div>
            </div>

        <div class="form-group">
    @Html.LabelFor(model => model.Storeys, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.Storeys)
        @Html.ValidationMessageFor(model => model.Storeys)
    </div>
</div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }

    <form id="imageUploadId">
        <h3>Upload a picture</h3>
        <input id="fileInputType" type="file" multiple class="fileUpload"
               style="width:300px;"><br />
        <p style="color: #0066FF">
            You Can Upload a JPG, GIF, Or PNG File.
            This example of upload image from Ajax and Image Gallery
        </p>
        <input type="submit" class="btn btn-success" value="Image Upload" />
    </form>

<div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>




<script>
    $(function () {
        $("#date-available").datepicker();
    });
</script>